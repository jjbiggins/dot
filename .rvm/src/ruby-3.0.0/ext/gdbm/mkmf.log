have_library: checking for gdbm_open() in -lgdbm... -------------------- yes

"gcc -fdeclspec -o conftest -I../../.ext/include/x86_64-darwin20 -I../.././include -I../.././ext/gdbm -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -I/opt/local/include -fno-common -pipe conftest.c  -L. -L../.. -L. -L/opt/local/lib -fstack-protector-strong -L/usr/local/lib     -lruby.3.0-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc   "
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return !!argv[argc];
6: }
/* end */

"gcc -fdeclspec -o conftest -I../../.ext/include/x86_64-darwin20 -I../.././include -I../.././ext/gdbm -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -I/opt/local/include -fno-common -pipe conftest.c  -L. -L../.. -L. -L/opt/local/lib -fstack-protector-strong -L/usr/local/lib     -lruby.3.0-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lgdbm   "
conftest.c:14:57: error: use of undeclared identifier 'gdbm_open'
int t(void) { void ((*volatile p)()); p = (void ((*)()))gdbm_open; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))gdbm_open; return !p; }
/* end */

"gcc -fdeclspec -o conftest -I../../.ext/include/x86_64-darwin20 -I../.././include -I../.././ext/gdbm -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -I/opt/local/include -fno-common -pipe conftest.c  -L. -L../.. -L. -L/opt/local/lib -fstack-protector-strong -L/usr/local/lib     -lruby.3.0-static -framework Security -framework Foundation -lpthread -lgmp -ldl -lobjc -lgdbm   "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: extern void gdbm_open();
15: int t(void) { gdbm_open(); return 0; }
/* end */

--------------------

have_header: checking for gdbm.h... -------------------- yes

"gcc -E -I../../.ext/include/x86_64-darwin20 -I../.././include -I../.././ext/gdbm -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -I/opt/local/include -fno-common -pipe  conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <gdbm.h>
/* end */

--------------------

checking for sizeof(DBM) is available... -------------------- yes

"gcc -fdeclspec -I../../.ext/include/x86_64-darwin20 -I../.././include -I../.././ext/gdbm -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -I/opt/local/include -fno-common -pipe   -c conftest.c"
conftest.c:5:36: error: use of undeclared identifier 'DBM'
const int sizeof_DBM = (int)sizeof(DBM);
                                   ^
1 error generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <gdbm.h>
4: 
5: const int sizeof_DBM = (int)sizeof(DBM);
/* end */

--------------------

extconf.h is:
/* begin */
1: #ifndef EXTCONF_H
2: #define EXTCONF_H
3: #define HAVE_GDBM_H 1
4: #define DBM_SIZEOF_DBM 0
5: #endif
/* end */

